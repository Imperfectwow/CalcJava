name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Build Stage
        run: echo "Building the project..."

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' 

      - name: Install Dependencies
        run: npm install

      - name: Run All Branch Files
        run: |
          echo "Running all JavaScript files in the 'branches' folder..."
          for file in branches/*.js; do
            echo "Running $file"
            node "$file"
          done

  docker_build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Get Tag for Master
        id: vars
        run: |
          if [[ "${{ github.ref_name }}" == "master" ]]; then
            echo "TAG=master_${{ github.run_id }}" >> $GITHUB_ENV
          else
            SANITIZED_BRANCH=$(echo "${{ github.ref_name }}" | tr '/' '-' | tr -cd '[:alnum:]-')
            echo "TAG=branch_${SANITIZED_BRANCH}" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/snakejs:${{ env.TAG }} .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/snakejs:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Deploy Stage
        run: echo "Deploying the application..."